{% set snake_name = component.name | lower -%}
{% set camel_name = component.name | camel -%}
#include <tests/mocks/mock_{{snake_name}}.hpp>

#include <common/v1/common.pb.h>
#include <component/{{ snake_name }}/v1/{{ snake_name }}.grpc.pb.h>
#include <component/{{ snake_name }}/v1/{{ snake_name }}.pb.h>

#include <components/{{ snake_name }}/{{ snake_name }}.hpp>
#include <components/{{ snake_name }}/server.hpp>
#include <tests/test_utils.hpp>

AttributeMap Mock{{ camel_name }}::do_command(AttributeMap command) {
    return map;
}

{%- for fn in component.member_fns %}
{{ camel_name }}::{{ fn.return_t }} Mock{{ camel_name }}::{{ fn.name }}({% for arg in fn.args -%} 
    {{ arg.type_t }} {{ arg.name }}{% if not loop.last %}, {% endif %}
{%- endfor %}) {
    // TODO impl
    return; 
};
{%- endfor %}
{{ camel_name }}::raw_image Mock{{ camel_name }}::get_image(std::string mime_type) {
    return image;
}


std::shared_ptr<Mock{{ camel_name }}> Mock{{ camel_name }}::get_mock_{{ snake_name }}() {
    auto {{ snake_name }} = std::make_shared<Mock{{ camel_name }}>("{{ snake_name }}");
    // TODO {{ snake_name }}->attr = fake_attr();

    return {{ snake_name }};
}
